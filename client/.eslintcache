[{"/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/Cocktail.js":"1","/Users/danidona/Desktop/DPL/portfolio_project/client/src/providers/CocktailProvider.js":"2","/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/CocktailForm.js":"3","/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/NoMatch.js":"4","/Users/danidona/Desktop/DPL/portfolio_project/client/src/providers/AuthProvider.js":"5","/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/NavBar.js":"6"},{"size":4456,"mtime":1625644353501,"results":"7","hashOfConfig":"8"},{"size":2691,"mtime":1625643053054,"results":"9","hashOfConfig":"8"},{"size":3949,"mtime":1625613841846,"results":"10","hashOfConfig":"8"},{"size":115,"mtime":1625605236438,"results":"11","hashOfConfig":"8"},{"size":1691,"mtime":1625612107980,"results":"12","hashOfConfig":"8"},{"size":1123,"mtime":1625605236438,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bccte2",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/Cocktail.js",["27","28","29"],"/Users/danidona/Desktop/DPL/portfolio_project/client/src/providers/CocktailProvider.js",["30"],"/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/CocktailForm.js",["31","32"],"import Axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { Header, Container, Form } from \"semantic-ui-react\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { CocktailContext } from \"../providers/CocktailProvider\";\n\nexport default ({ cocktailProp, addCocktail, editCocktail, history }) => {\n  const { handleCocktailEdit, handleCocktailCreate } = useContext(\n    CocktailContext\n  );\n  //setting cocktail to a default value\n  const { user } = useContext(AuthContext);\n  const [cocktail, setCocktail] = useState(\n    cocktailProp\n      ? {\n          name: cocktailProp.name,\n          served: cocktailProp.served,\n          garnish: cocktailProp.garnish,\n          drinkware: cocktailProp.drinkware,\n          ingredients: cocktailProp.ingredients,\n          instructions: cocktailProp.instructions,\n          image: cocktailProp.image,\n          timing: cocktailProp.timing,\n          user_id: user.id,\n        }\n      : {\n          name: \"\",\n          served: \"\",\n          garnish: \"\",\n          drinkware: \"\",\n          ingredients: \"\",\n          instructions: \"\",\n          image: \"\",\n          timing: \"\",\n          user_id: user.id,\n        }\n  );\n\n  const addCallCocktail = () => {\n    // try {\n    //   let res = await Axios.post(`/api/cocktails`, cocktail);\n    //   addCocktail(res.data);\n    // } catch (err) {\n    //   console.log(err);\n    // }\n    handleCocktailCreate(cocktail, history);\n  };\n\n  const editCallCocktail = () => {\n    handleCocktailEdit(cocktailProp.id, cocktail, history);\n  };\n\n  const handleChange = (e) => {\n    setCocktail({ ...cocktail, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (cocktailProp) {\n      editCallCocktail();\n    } else {\n      addCallCocktail();\n      setCocktail({\n        name: \"\",\n        served: \"\",\n        garnish: \"\",\n        drinkware: \"\",\n        ingredients: \"\",\n        instructions: \"\",\n        image: \"\",\n        timing: \"\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Container>\n        <Header as=\"h1\" textAlign=\"center\">\n          Your Cocktail\n        </Header>\n        <Form onSubmit={handleSubmit}>\n          <Form.Input\n            label=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            value={cocktail.name}\n            onChange={handleChange}\n            required\n          />\n          <Form.Input\n            label=\"Served\"\n            type=\"text\"\n            name=\"served\"\n            value={cocktail.served}\n            onChange={handleChange}\n            required\n          />\n          <Form.Input\n            label=\"Garnish\"\n            type=\"text\"\n            name=\"garnish\"\n            value={cocktail.garnish}\n            onChange={handleChange}\n          />\n          <Form.Input\n            label=\"Drinkware\"\n            type=\"text\"\n            name=\"drinkware\"\n            value={cocktail.drinkware}\n            onChange={handleChange}\n            required\n          />\n          <Form.Input\n            label=\"Ingredients\"\n            type=\"text\"\n            name=\"ingredients\"\n            value={cocktail.ingredients}\n            onChange={handleChange}\n            required\n          />\n          <Form.Input\n            label=\"Instructions\"\n            type=\"text\"\n            name=\"instructions\"\n            value={cocktail.instructions}\n            onChange={handleChange}\n            required\n          />\n          <Form.Input\n            label=\"Image Url\"\n            type=\"text\"\n            name=\"image\"\n            value={cocktail.image}\n            onChange={handleChange}\n          />\n          <Form.Input\n            label=\"Timing\"\n            type=\"text\"\n            name=\"timing\"\n            value={cocktail.timing}\n            onChange={handleChange}\n          />\n          <Form.Button type=\"submit\">\n            {cocktailProp ? \"edit\" : \"add\"}\n          </Form.Button>\n        </Form>\n      </Container>\n    </>\n  );\n};\n","/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/NoMatch.js",["33"],"/Users/danidona/Desktop/DPL/portfolio_project/client/src/providers/AuthProvider.js",[],"/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/NavBar.js",["34"],{"ruleId":"35","severity":1,"message":"36","line":12,"column":3,"nodeType":"37","messageId":"38","endLine":12,"endColumn":7},{"ruleId":"39","severity":1,"message":"40","line":32,"column":17,"nodeType":"41","messageId":"42","endLine":32,"endColumn":19},{"ruleId":"43","severity":1,"message":"44","line":53,"column":6,"nodeType":"45","endLine":53,"endColumn":8,"suggestions":"46"},{"ruleId":"35","severity":1,"message":"47","line":62,"column":11,"nodeType":"37","messageId":"38","endLine":62,"endColumn":14},{"ruleId":"35","severity":1,"message":"48","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":7,"column":1,"nodeType":"51","endLine":151,"endColumn":3},{"ruleId":"49","severity":1,"message":"50","line":1,"column":1,"nodeType":"51","endLine":7,"endColumn":3},{"ruleId":"49","severity":1,"message":"50","line":6,"column":1,"nodeType":"51","endLine":45,"endColumn":3},"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getReviews'. Either include it or remove the dependency array.","ArrayExpression",["52"],"'res' is assigned a value but never used.","'Axios' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"53","fix":"54"},"Update the dependencies array to be: [getReviews]",{"range":"55","text":"56"},[1547,1549],"[getReviews]"]