[{"/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/NavBar.js":"1","/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/Cocktail.js":"2","/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/CocktailForm.js":"3","/Users/danidona/Desktop/DPL/portfolio_project/client/src/providers/CocktailProvider.js":"4","/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/ProtectedRoute.js":"5","/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/Login.js":"6","/Users/danidona/Desktop/DPL/portfolio_project/client/src/providers/AuthProvider.js":"7"},{"size":1123,"mtime":1625605236438,"results":"8","hashOfConfig":"9"},{"size":4679,"mtime":1629684948856,"results":"10","hashOfConfig":"9"},{"size":5218,"mtime":1629966355032,"results":"11","hashOfConfig":"9"},{"size":2691,"mtime":1625643053054,"results":"12","hashOfConfig":"9"},{"size":500,"mtime":1625605236438,"results":"13","hashOfConfig":"9"},{"size":1209,"mtime":1625605236438,"results":"14","hashOfConfig":"9"},{"size":1691,"mtime":1625612107980,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"bccte2",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/NavBar.js",["34"],"import { useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Menu } from \"semantic-ui-react\";\nimport { AuthContext } from \"../providers/AuthProvider\";\n\nexport default (props) => {\n  const history = useHistory();\n  const { authenticated, handleLogout } = useContext(AuthContext);\n\n  const rightNavItems = () => {\n    if (authenticated) {\n      return (\n        <>\n          <Menu.Item name=\"logout\" onClick={() => handleLogout(history)} />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Link to=\"/login\">\n            <Menu.Item id=\"login\" name=\"login\">\n              Login\n            </Menu.Item>\n          </Link>\n          <Link to=\"/register\">\n            <Menu.Item id=\"Register\" name=\"register\">\n              Register\n            </Menu.Item>\n          </Link>\n        </>\n      );\n    }\n  };\n  return (\n    <Menu>\n      <Link to=\"/\">\n        <Menu.Item>Home</Menu.Item>\n      </Link>\n      <Link to='/create'>\n      <Menu.Item>Create a Cocktail</Menu.Item>\n      </Link>\n      <Menu.Menu position=\"right\">{rightNavItems()}</Menu.Menu>\n    </Menu>\n  );\n};\n","/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/Cocktail.js",["35","36","37","38"],"import Axios from \"axios\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useContext, useEffect, useState } from \"react\";\nimport {\n  Container,\n  Header,\n  List,\n  Image,\n  Rating,\n  Form,\n  Card,\n  Icon,\n} from \"semantic-ui-react\";\nimport { CocktailContext } from \"../providers/CocktailProvider\";\nimport { ReviewContext } from \"../providers/ReviewProvider\";\nimport CocktailForm from \"./CocktailForm\";\nimport { AuthContext } from \"../providers/AuthProvider\";\n\nconst Cocktail = (props) => {\n  const { cocktails, handleCocktailDelete } = useContext(CocktailContext);\n  const { createReviews } = useContext(ReviewContext);\n  const [reviews, setReviews] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const { user } = useContext(AuthContext);\n  const handleShow = () => setShow(true);\n  const handleHide = () => setShow(false);\n  const [average, setAverage] = useState(0);\n\n  let cocktail = cocktails.find((c) => {\n    return c.id == props.match.params.id;\n  });\n  const getReviews = () => {\n    Axios.get(`/api/cocktails/${props.match.params.id}/reviews`)\n      .then((res) => {\n        setReviews(res.data);\n        let ratingTotals = 0;\n        let count = 0;\n        res.data.forEach((review) => {\n          ratingTotals += review.rating;\n          count += 1;\n        });\n        ratingTotals === NaN ? setAverage(0) : setAverage(ratingTotals / count);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  useEffect(() => {\n    getReviews();\n  }, []);\n\n  console.log(average);\n  const renderReviews = () => {\n    if (reviews !== null) {\n      return reviews.map((r) => (\n        <Card key={r.id}>\n          <Card.Header>\n            <Rating defaultRating={r.rating} maxRating={5} disabled />\n          </Card.Header>\n          <Card.Content>{r.comment}</Card.Content>\n        </Card>\n      ));\n    }\n  };\n  const renderButtons = () => {\n    if (user && user.id === cocktail.user_id) {\n      return (\n        <>\n          <Button onClick={handleShow}>Edit</Button>\n          <Button onClick={handleDelete}>Delete</Button>\n        </>\n      );\n    }\n  };\n\n  const renderAverage = () => {\n    if (isNaN(parseFloat(average))) {\n      return;\n    } else {\n      return <p>{average}</p>;\n    }\n  };\n\n  const handleRate = (e, { rating }) => {\n    setRating(rating);\n  };\n\n  const handleSubmit = (e) => {\n    // console.log(rating, comment);\n    createReviews({ rating: rating, comment: comment }, props.match.params.id);\n    window.location.reload();\n  };\n\n  const handleDelete = () => {\n    handleCocktailDelete(cocktail.id, props.history);\n  };\n\n  return (\n    <>\n      <Container>\n        <Header as=\"h1\" textAlign=\"center\">\n          {cocktail.name}\n        </Header>\n        <Image src={cocktail.image} />\n        <List>\n          <List.Item>How it's served: {cocktail.served}</List.Item>\n          <List.Item>Garnish: {cocktail.garnish}</List.Item>\n          <List.Item>Drinkware: {cocktail.drinkware} glass</List.Item>\n          <List.Item>Ingredients: {cocktail.ingredients}</List.Item>\n          <List.Item>Best time to drink: {cocktail.timing}</List.Item>\n        </List>\n        <Header as=\"h4\">Directions</Header>\n        <p>{cocktail.instructions}</p>\n        {renderButtons()}\n        <Modal\n          show={show}\n          onHide={handleHide}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Modal title</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <CocktailForm cocktailProp={cocktail} handleClose={handleHide} />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleHide}>\n              Cancel\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Header as=\"h4\">Reviews</Header>\n        <div>\n          {user && (\n            <Rating\n              icon=\"star\"\n              defaultRating={average}\n              maxRating={5}\n              size=\"huge\"\n              onRate={handleRate}\n            />\n          )}\n          {user && renderAverage()}\n        </div>\n        {user && (\n          <Form onSubmit={handleSubmit}>\n            <Form.Input\n              label=\"Comment\"\n              type=\"text\"\n              name=\"comment\"\n              value={comment}\n              onChange={(e, { value }) => {\n                setComment(value);\n              }}\n            />\n            <Form.Button type=\"submit\">submit</Form.Button>\n          </Form>\n        )}\n        {renderReviews()}\n      </Container>\n    </>\n  );\n};\nexport default Cocktail;\n","/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/CocktailForm.js",["39","40","41","42"],"/Users/danidona/Desktop/DPL/portfolio_project/client/src/providers/CocktailProvider.js",["43"],"import React from \"react\";\nimport Axios from \"axios\";\n\nexport const CocktailContext = React.createContext();\n\nexport const CocktailConsumer = CocktailContext.Consumer;\n\nexport class CocktailProvider extends React.Component {\n  state = {\n    cocktails: null,\n    filterCocktails: (x) => this.filterCocktails(x),\n    handleCocktailCreate: (x) => this.handleCocktailCreate(x),\n    handleCocktailEdit: (x, y) => this.handleCocktailEdit(x, y),\n  };\n\n  getCocktails = () => {\n    Axios.get(\"/api/cocktails\")\n      .then((res) => {\n        this.setState({ cocktails: res.data });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  componentDidMount = () => {\n    this.getCocktails();\n  };\n\n  //handle search query\n  filterCocktails = (query) => {\n    Axios.get(\"/api/cocktails/search\", { params: { query } })\n      .then((res) => {\n        this.setState({ cocktails: res.data });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  handleCocktailCreate = (cocktail, history) => {\n    Axios.post(\"/api/cocktails\", cocktail)\n      .then((res) => {\n        console.log(res.data);\n        this.setState({ cocktails: [res.data, ...this.state.cocktails] });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    history.goBack();\n  };\n  handleCocktailEdit = async (id, cocktail, history) => {\n    try {\n      let res = await Axios.put(`/api/cocktails/${id}`, cocktail);\n      console.log(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n    history.push(\"/\");\n  };\n  handleCocktailDelete = async (id, history) => {\n    try {\n      let res = await Axios.delete(`/api/cocktails/${id}`);\n      history.push(\"/cocktails\");\n      let newCocktails = this.state.cocktails.filter(\n        (cocktail) => id !== cocktail.id\n      );\n      this.setState({ cocktails: newCocktails });\n      // this.setState({\n      //   cocktails: this.state.cocktails.filter(\n      //     (cocktail) => cocktail.id !== id\n      //   ),\n      // });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  render() {\n    return (\n      <CocktailContext.Provider\n        value={{\n          ...this.state,\n          setCocktail: (cocktail) => this.setState({ cocktail }),\n          handleCocktailDelete: this.handleCocktailDelete,\n          handleCocktailEdit: this.handleCocktailEdit,\n          handleCocktailCreate: this.handleCocktailCreate,\n        }}\n        key={this.state.cocktails}\n      >\n        {this.props.children}\n      </CocktailContext.Provider>\n    );\n  }\n}\n\n/*\nNeed a function to handle search queries from a form that will be the main home page of this app.\nhave function use context to call functions that will be made in here.\n*/\n",["44","45"],"/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/ProtectedRoute.js",["46"],"/Users/danidona/Desktop/DPL/portfolio_project/client/src/components/Login.js",["47"],"/Users/danidona/Desktop/DPL/portfolio_project/client/src/providers/AuthProvider.js",[],{"ruleId":"48","severity":1,"message":"49","line":6,"column":1,"nodeType":"50","endLine":45,"endColumn":3},{"ruleId":"51","severity":1,"message":"52","line":12,"column":3,"nodeType":"53","messageId":"54","endLine":12,"endColumn":7},{"ruleId":"55","severity":1,"message":"56","line":32,"column":17,"nodeType":"57","messageId":"58","endLine":32,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":44,"column":9,"nodeType":"57","messageId":"61","endLine":44,"endColumn":29},{"ruleId":"62","severity":1,"message":"63","line":52,"column":6,"nodeType":"64","endLine":52,"endColumn":8,"suggestions":"65"},{"ruleId":"51","severity":1,"message":"66","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":13},{"ruleId":"51","severity":1,"message":"67","line":6,"column":20,"nodeType":"53","messageId":"54","endLine":6,"endColumn":34},{"ruleId":"48","severity":1,"message":"49","line":9,"column":1,"nodeType":"50","endLine":175,"endColumn":3},{"ruleId":"51","severity":1,"message":"68","line":62,"column":9,"nodeType":"53","messageId":"54","endLine":62,"endColumn":21},{"ruleId":"51","severity":1,"message":"69","line":62,"column":11,"nodeType":"53","messageId":"54","endLine":62,"endColumn":14},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"51","severity":1,"message":"74","line":1,"column":10,"nodeType":"53","messageId":"54","endLine":1,"endColumn":19},{"ruleId":"48","severity":1,"message":"49","line":5,"column":1,"nodeType":"50","endLine":43,"endColumn":3},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getReviews'. Either include it or remove the dependency array.","ArrayExpression",["75"],"'Axios' is defined but never used.","'registerPlugin' is defined but never used.","'handleChange' is assigned a value but never used.","'res' is assigned a value but never used.","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'Component' is defined but never used.",{"desc":"78","fix":"79"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getReviews]",{"range":"80","text":"81"},[1585,1587],"[getReviews]"]